------------------------------------ Recursion ----------------------------------

import java.io.*;
import java.util.*;

public class Main{
    
    public static int solve(int l,int n,int lav){
        if(l == n){
            return 1;
        }
        
        int count =0;
        
        if(lav == 1){
            count+= solve(l+1,n,1) + solve(l+1,n,0);
        }
        else{
            count+= solve(l+1,n,1);
        }
        
        
        return count;
        
    }

public static void main(String[] args) throws Exception {
    // write your code here
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    
    int ans = solve(0,n,1);
    System.out.println(ans);
 }

}

-------------------------------Memoisation----------------------------------------

import java.io.*;
import java.util.*;

public class Main{
    
    public static int solve(int n,int lav,int[][] dp){
        if(n == 0){
            return dp[n][lav]=1;
        }
        if(dp[n][lav]!=0){
            return dp[n][lav];
        }
        int count =0;
        
        if(lav == 1){
            count+= solve(n-1,1,dp) + solve(n-1,0,dp);
            
        }
        else{
            count+= solve(n-1,1,dp);

        }
        
        
        return dp[n][lav]=count;
        
    }

public static void main(String[] args) throws Exception {
    // write your code here
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[][] dp = new int[n+1][2];
    int ans = solve(n,1,dp);
   
    System.out.println(ans);
 }

}

------------------------Tabulation---------------------------

import java.io.*;
import java.util.*;

public class Main{
    
    public static int solve(int N){
        int[][] dp = new int[2][N];
        
        dp[0][0]=1;
        dp[1][0]=1;
        
        for(int i =1;i<N;i++){
            dp[0][i] = dp[1][i-1];
            dp[1][i] = dp[0][i-1] + dp[1][i-1];
        }
        
        return dp[0][N-1] + dp[1][N-1];
        
    }

public static void main(String[] args) throws Exception {
    // write your code here
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    
    int ans = solve(n);
   
    System.out.println(ans);
 }

}

-------------------------Optimized-----------------------------------------

import java.io.*;
import java.util.*;

public class Main{
    
    public static int solve(int n){
       
        int one =1;
        int zero =1;
        
        for(int i=2;i<=n;i++){
            int newzero = one;
            int newone = one+zero;
            
            one = newone;
            zero = newzero;
        }
        
        return one+zero;
    }

public static void main(String[] args) throws Exception {
    // write your code here
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    
    int ans = solve(n);
   
    System.out.println(ans);
 }

}
