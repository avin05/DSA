import java.io.*;
import java.util.*;

public class Main {
    
    public static int knapsack(int[] wts,int[] vals,int idx,int cap,int[][] dp){
        if(idx == -1){
            return dp[idx+1][cap]=0;
        }
        
        if(dp[idx+1][cap]!=0){
            return dp[idx+1][cap];
        }
        
        int v1=0;
        
        if(cap - wts[idx]>=0){
            v1=    knapsack(wts,vals,idx-1,cap-wts[idx],dp)+vals[idx];
        }
        
        int v2 = knapsack(wts,vals,idx-1,cap,dp);
        
        return dp[idx+1][cap] = Math.max(v1,v2);
        
        
    }

  public static void main(String[] args) throws Exception {
      
      Scanner sc = new Scanner(System.in);
      int n = sc.nextInt();
      int[] vals = new int[n];
      int[] wts = new int[n];
      
      for(int i=0;i<n;i++){
          vals[i] = sc.nextInt();
      }
      
      for(int i=0;i<n;i++){
          wts[i] = sc.nextInt();
      }
      
      int cap = sc.nextInt();
      
      int[][] dp = new int[n+1][cap+1];
      
      int ans = knapsack(wts,vals,n-1,cap,dp);
      System.out.println(ans);

  }
}
