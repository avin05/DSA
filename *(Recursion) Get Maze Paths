import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        
        ArrayList<String> ans = getMazePaths(1,1,n,m);
        System.out.println(ans);
        

    }

    // sr - source row
    // sc - source column
    // dr - destination row
    // dc - destination column
    public static ArrayList<String> getMazePaths(int sr, int sc, int dr, int dc) {
        if(sr == dr && sc == dc){
            ArrayList<String> a = new ArrayList<>();
            a.add("");
            return a;
        }
        
        ArrayList<String> hpath = new ArrayList<>();
        ArrayList<String> vpath = new ArrayList<>();
        
        if(sc<dc){
            hpath = getMazePaths(sr,sc+1,dr,dc);
        }
        if(sr<dr){
            vpath = getMazePaths(sr+1,sc,dr,dc);
        }
        ArrayList<String> paths = new ArrayList<>();
        
        for(String s:hpath){
            paths.add("h"+s);
        }
        
        for(String s:vpath){
            paths.add("v"+s);
        }
        return paths;
    }

}











------------------------------------------------___________________________---------------------------------




import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        ArrayList<String> ans = getMazePaths(0,0,n-1,m-1);
        System.out.println(ans);

    }

    // sr - source row
    // sc - source column
    // dr - destination row
    // dc - destination column
    public static ArrayList<String> getMazePaths(int sr, int sc, int dr, int dc) {
        
        if(sc == dc && sr == dr){
            ArrayList<String> bres = new ArrayList<>();
            bres.add("");
            return bres;
        }
        
        ArrayList<String> mres = new ArrayList<>();
        if(sc<dc){
            ArrayList<String> rres = getMazePaths(sr,sc+1,dr,dc);
            
            for(String s: rres){
                mres.add("h"+s);
            }
        }
        
        if(sr<dr){
            ArrayList<String> rres = getMazePaths(sr+1,sc,dr,dc);
            
            for(String s: rres){
                mres.add("v"+s);
            }
        }
        
        return mres;
    }

}
