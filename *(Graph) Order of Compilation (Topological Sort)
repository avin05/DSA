import java.io.*;
import java.util.*;

public class Main {
   static class Edge {
      int src;
      int nbr;

      Edge(int src, int nbr) {
         this.src = src;
         this.nbr = nbr;
      }
   }
   public static void topoSort(ArrayList<Edge>[] graph,int v,Stack<Integer> st,boolean[] vis){
     
       vis[v]=true;
       
       for(Edge e:graph[v]){
           if(vis[e.nbr]==false){
               topoSort(graph,e.nbr,st,vis);
           }
       }
       
        st.push(v);
   }
   public static void topological(ArrayList<Edge>[] graph){
       Stack<Integer> st = new Stack<>();
       boolean[] vis = new boolean[graph.length];
       
       for(int v =0;v<graph.length;v++){
           if(vis[v]==false){
               topoSort(graph,v,st,vis);
           }
       }
       
       while(st.size()>0){
           System.out.println(st.pop());
       }
   }

   public static void main(String[] args) throws Exception {
      BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

      int vtces = Integer.parseInt(br.readLine());
      ArrayList<Edge>[] graph = new ArrayList[vtces];
      for (int i = 0; i < vtces; i++) {
         graph[i] = new ArrayList<>();
      }

      int edges = Integer.parseInt(br.readLine());
      for (int i = 0; i < edges; i++) {
         String[] parts = br.readLine().split(" ");
         int v1 = Integer.parseInt(parts[0]);
         int v2 = Integer.parseInt(parts[1]);
         graph[v1].add(new Edge(v1, v2));
      }

      // write your code here
      topological(graph);
   }

}
