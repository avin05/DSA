import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n =sc.nextInt();
        int r = sc.nextInt();
        int c = sc.nextInt();
        int[][] chess = new int[n][n];
        printKnightsTour(chess,r,c,1);
    }

    public static void printKnightsTour(int[][] chess, int r, int c, int move) {
        if(r<0 || c<0 || r >= chess.length || c >= chess.length || chess[r][c]>0){
            return;
        }
        else if(move ==chess.length*chess.length){
            chess[r][c]=move;
            displayBoard(chess);
            chess[r][c]=0;
            return;
        }
        
        chess[r][c]=move;
        printKnightsTour(chess,r-2,c+1,move+1);
        printKnightsTour(chess,r-1,c+2,move+1);
        printKnightsTour(chess,r+1,c+2,move+1);
        printKnightsTour(chess,r+2,c+1,move+1);
        printKnightsTour(chess,r+2,c-1,move+1);
        printKnightsTour(chess,r+1,c-2,move+1);
        printKnightsTour(chess,r-1,c-2,move+1);
        printKnightsTour(chess,r-2,c-1,move+1);
        chess[r][c]=0;
        
    }

    public static void displayBoard(int[][] chess){
        for(int i = 0; i < chess.length; i++){
            for(int j = 0; j < chess[0].length; j++){
                System.out.print(chess[i][j] + " ");
            }
            System.out.println();
        }

        System.out.println();
    }
}



--------------------------------------------Similar Approach-------------------------------------------

import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int r = sc.nextInt();
        int c = sc.nextInt();
        int[][] chess = new int[n][n];
        printKnightsTour(chess,r,c,1);
        
    }
    public static int[] xdir = {-2,-1,1,2,2,1,-1,-2};
    public static int[] ydir = {1,2,2,1,-1,-2,-2,-1};
    public static void printKnightsTour(int[][] chess, int r, int c, int count) {
        
        if(count == chess.length * chess.length){
            chess[r][c]=count;
            displayBoard(chess);
            chess[r][c]=0;
            return;
        }
        
        
        chess[r][c]=count;
        
        for(int d =0;d<8;d++){
            int rr = r+xdir[d];
            int cc = c+ydir[d];
            
            if(rr>=0 && rr<chess.length && cc>=0 && cc<chess.length && chess[rr][cc]==0){
                printKnightsTour(chess,rr,cc,count+1);
            }
        }
        
        chess[r][c]=0;
    }

    public static void displayBoard(int[][] chess){
        for(int i = 0; i < chess.length; i++){
            for(int j = 0; j < chess[0].length; j++){
                System.out.print(chess[i][j] + " ");
            }
            System.out.println();
        }

        System.out.println();
    }
}
