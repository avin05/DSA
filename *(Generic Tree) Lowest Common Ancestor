public static ArrayList<Integer> nodeToRootPath(Node node, int data) {
    if (node.data == data) {
      ArrayList<Integer> path = new ArrayList<>();
      path.add(node.data);
      return path;
    }

    for (Node child : node.children) {
      ArrayList<Integer> ptc = nodeToRootPath(child, data);
      if (ptc.size() > 0) {
        ptc.add(node.data);
        return ptc;
      }
    }

    return new ArrayList<>();
  }

  public static int lca(Node node, int d1, int d2) {
    // write your code here
    ArrayList<Integer> arr1 = nodeToRootPath(node,d1);
    ArrayList<Integer> arr2 = nodeToRootPath(node,d2);
    int ans =-1;
    int i = arr1.size()-1;
    int j = arr2.size()-1;
    
    while(i>=0 && j>=0){
        if(arr1.get(i) == arr2.get(j)){
            ans = arr1.get(i);
           
        }
        
        i--;
        j--;
    }
    return ans;
  }
